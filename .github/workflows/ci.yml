name: CI

on:
  push:
    branches: [ "main", "feature/**" ]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Sync deps with dev extras
        run: uv sync --extra dev --frozen

      - name: Run Ruff
        run: uv run ruff check .

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Sync deps with dev extras
        run: uv sync --extra dev --frozen

      - name: Run tests with coverage
        run: uv run pytest --cov=etl --cov-report=term-missing
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set version
        id: vars
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)
          VERSION="0.1.0+${GITHUB_SHA}"
          DOCKER_TAG="0.1.0-${SHORT_SHA}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "docker_tag=$DOCKER_TAG" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run: |
          docker build \
            -t de-test-etl:${{ steps.vars.outputs.docker_tag }} \
            -t de-test-etl:latest \
            .

      - name: Save image as artifact
        run: |
          docker save de-test-etl:${{ steps.vars.outputs.docker_tag }} -o de-test-etl.tar
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: de-test-etl.tar
